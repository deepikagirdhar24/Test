public void applyDoubleField(String rawValue, String fieldName, POJOMoneyAccountRequest account) {
    String normalized = normalize(rawValue);
    if (normalized != null && !normalized.isEmpty()) {
        try {
            double parsed = Double.parseDouble(normalized);
            switch (fieldName) {
                case "mailingOffsetDay":
                    account.setDblMailingOffsetDay(parsed);
                    break;
                case "mailingOffsetMonth":
                    account.setDblMailingOffsetMonth(parsed);
                    break;
                case "minimalNoticeDays":
                    account.setDblMinimalNoticeDays(parsed);
                    break;
                default:
                    System.err.println("Unknown double field: " + fieldName);
            }
        } catch (NumberFormatException e) {
            System.err.println("Invalid numeric value for " + fieldName + ": " + normalized);
        }
    }
}

public void applyBooleanField(String rawValue, String fieldName, POJOMoneyAccountRequest account) {
    String normalized = normalize(rawValue);
    if (normalized != null && !normalized.isEmpty()) {
        boolean parsed = Boolean.parseBoolean(normalized);
        switch (fieldName) {
            case "isMailingPaper":
                account.setBlnIsMailingPaper(parsed);
                break;
            default:
                System.err.println("Unknown boolean field: " + fieldName);
        }
    }
}

payloadHelper.applyDoubleField(mapMoneyAccountDetails.get("mailingOffsetDay"), "mailingOffsetDay", moneyAccount);
payloadHelper.applyDoubleField(mapMoneyAccountDetails.get("mailingOffsetMonth"), "mailingOffsetMonth", moneyAccount);
payloadHelper.applyDoubleField(mapMoneyAccountDetails.get("minimalNoticeDays"), "minimalNoticeDays", moneyAccount);
payloadHelper.applyBooleanField(mapMoneyAccountDetails.get("isMailingPaper"), "isMailingPaper", moneyAccount);
