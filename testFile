public class PersonPayloadBuilder {

    public static NewPersonRequest buildNewPersonPayload(Map<String, String> mapPersonDetails) {
        NewPersonRequest personRequest = new NewPersonRequest();

        String uuid = UUID.randomUUID().toString().substring(0, 7);
        personRequest.setStrUuid(uuid);

        personRequest.setStrSubType(mapPersonDetails.get("subType"));
        personRequest.setStrDomiCountry(mapPersonDetails.get("domicileCountry"));
        personRequest.setStrFirstName(mapPersonDetails.get("firstName"));
        personRequest.setStrLastName(mapPersonDetails.get("lastName"));
        personRequest.setStrGender(mapPersonDetails.get("gender"));

        // Handle nationalities
        String strNationalities = mapPersonDetails.get("nationalities");
        List<String> lstNationality = new ArrayList<>();
        if (strNationalities != null && !strNationalities.trim().isEmpty()) {
            lstNationality = Arrays.stream(strNationalities.split(","))
                    .map(String::trim)
                    .filter(s -> !s.isEmpty())
                    .collect(Collectors.toList());
        }
        personRequest.setLstNationalities(lstNationality);

        return personRequest;
    }
}

NewPersonRequest personRequest = PersonPayloadBuilder.buildNewPersonPayload(mapPersonDetails);
String uuid = personRequest.getStrUuid();  // Extract if needed
scenarioContext.setContext("uuid", uuid);
