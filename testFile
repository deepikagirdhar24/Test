public POJOMoneyAccountRequest buildMoneyAccountPayload(Map<String, String> mapAccountDetails, boolean includeUuid) {
    POJOMoneyAccountRequest account = new POJOMoneyAccountRequest();

    if (includeUuid) {
        account.setUuid(UUID.randomUUID().toString().substring(0, 7));
    }

    account.setOwnerId(payloadHelper.normalize(mapAccountDetails.get("ownerId")));
    account.setType(payloadHelper.normalize(mapAccountDetails.get("type")));
    account.setCurrency(payloadHelper.normalize(mapAccountDetails.get("currency")));
    account.setRubric(payloadHelper.normalize(mapAccountDetails.get("rubric")));

    // Parse comma-separated address IDs into List<String>
    String addressList = payloadHelper.normalize(mapAccountDetails.get("addressIds")); // "57853981,57853981"
    if (addressList != null) {
        List<String> addressIds = Arrays.asList(addressList.split(","));
        account.setAddressIds(addressIds);
    }

    // Set optional numeric values, convert from String to Double
    String offsetDay = mapAccountDetails.get("mailingOffsetDay");
    if (offsetDay != null) {
        account.setMailingOffsetDay(Double.parseDouble(offsetDay));
    }

    String offsetMonth = mapAccountDetails.get("mailingOffsetMonth");
    if (offsetMonth != null) {
        account.setMailingOffsetMonth(Double.parseDouble(offsetMonth));
    }

    String minimalNoticeDays = mapAccountDetails.get("minimalNoticeDays");
    if (minimalNoticeDays != null) {
        account.setMinimalNoticeDays(Double.parseDouble(minimalNoticeDays));
    }

    String isMailingPaper = mapAccountDetails.get("isMailingPaper"); // true/false as String
    if (isMailingPaper != null) {
        account.setIsMailingPaper(Boolean.parseBoolean(isMailingPaper));
    }

    return account;
}
