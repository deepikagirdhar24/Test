// New method to get Contact Notes
    public Response getGetContactNotes(String strEnvType,String strBearerToken,String strJWTToken) throws JsonProcessingException {

        String strAuthentication = objdevHelperLibrary.buildAuthHeader(strBearerToken, strJWTToken);
        String strTYKURL = objdevHelperLibrary.getTYKURL(strEnvType, "TYK.CONTACTNOTES");

        // Logging request details
        ExtentCucumberAdapter.addTestStepLog("Sending request to Create New Person");
        ExtentCucumberAdapter.addTestStepLog("Request URL: " + strTYKURL);
        ExtentCucumberAdapter.addTestStepLog("Request Headers: Authorization=" + strAuthentication);

        response = with().spec(rspec)
                .header("Authorization",strBearerToken+" "+strJWTToken)
                .header("X-TYK-API-KEY",TYK_KEY)
                .get(strTYKURL);
        responseBody = objdevHelperLibrary.getResponseBody(response);
        //objCucumberLogger.PrintStatus("Status code is"+response.statusCode());
        objCucumberLogger.PrintStatus("Response is"+responseBody);

        // Logging response details
        ExtentCucumberAdapter.addTestStepLog("Response Code: " + response.getStatusCode());
        ExtentCucumberAdapter.addTestStepLog("Response Body:\n" + responseBody);

        return response;
    }

//Function to create a New Person
    public Response createNewPerson(String strEnvType,String strBearerToken,String strJWTToken, Map<String, String> mapPersonDetails) throws JsonProcessingException {

        String strAuthentication = objdevHelperLibrary.buildAuthHeader(strBearerToken, strJWTToken);
        String strTYKURL = objdevHelperLibrary.getTYKURL(strEnvType, "TYK.CREATENEWPERSON");

        NewPersonRequest personRequest = new NewPersonRequest();
        personRequest.setStrUuid(UUID.randomUUID().toString().substring(0, 7));
        personRequest.setStrSubType(mapPersonDetails.get("subType"));
        personRequest.setStrDomiCountry(mapPersonDetails.get("domicileCountry"));
        personRequest.setStrFirstName(mapPersonDetails.get("firstName"));
        personRequest.setStrLastName(mapPersonDetails.get("lastName"));
        personRequest.setStrGender(mapPersonDetails.get("gender"));
        personRequest.setLstNationalities(Collections.singletonList(mapPersonDetails.get("nationality")));

        strJsonBody = new ObjectMapper().writeValueAsString(personRequest);

        //objCucumberLogger.PrintStatus(jsonBody);

        // Logging request details
        ExtentCucumberAdapter.addTestStepLog("Sending request to Create New Person");
        ExtentCucumberAdapter.addTestStepLog("Request URL: " + strTYKURL);
        ExtentCucumberAdapter.addTestStepLog("Request Headers: Authorization=" + strAuthentication);
        ExtentCucumberAdapter.addTestStepLog("Request Body:\n" + strJsonBody);

        response = with().spec(rspec)
                .header("Authorization",strBearerToken+" "+strJWTToken)
                .header("X-TYK-API-KEY",TYK_KEY)
                .header("Content-Type","application/json")
                .body(strJsonBody)
                .post(strTYKURL);
        responseBody = objdevHelperLibrary.getResponseBody(response);

        // Logging response details
        ExtentCucumberAdapter.addTestStepLog("Response Code: " + response.getStatusCode());
        ExtentCucumberAdapter.addTestStepLog("Response Body:\n" + responseBody);

        //objCucumberLogger.PrintStatus("Status code is"+response.statusCode());
        strObjectId = response.jsonPath().getString("objectId");
        strOrderId = response.jsonPath().getString("orderId");

        objCucumberLogger.PrintStatus("Response is"+responseBody);
        //objCucumberLogger.PrintStatus("Extracted Object Id is : "+ strObjectId);
        //objCucumberLogger.PrintStatus("Extracted Order Id is : "+ strOrderId);
        ExtentCucumberAdapter.addTestStepLog("Extracted Object Id is : "+ strObjectId);
        ExtentCucumberAdapter.addTestStepLog("Extracted Order Id is : " + strOrderId);
        return response;
    }

    //Function to create a Contact Note
    public Response createContactNote(String strEnvType, String strBearerToken, String strJWTToken, Map<String, String> mapNoteDetails) throws JsonProcessingException {

        String strAuthentication = objdevHelperLibrary.buildAuthHeader(strBearerToken, strJWTToken);
        String strTYKURL = objdevHelperLibrary.getTYKURL(strEnvType, "TYK.CONTACTNOTES");

        ContactNoteRequest noteRequest = new ContactNoteRequest();
        noteRequest.setLstPersonIds(Collections.singletonList(strObjectId)); // assumed already set globally

        noteRequest.setStrSubject(mapNoteDetails.get("subject"));
        noteRequest.setStrNotes(mapNoteDetails.get("notes"));
        noteRequest.setBoolHasFollowup(Boolean.parseBoolean(mapNoteDetails.get("hasFollowup")));

        strJsonBody = objectMapper.writeValueAsString(noteRequest);

        // Logging request details
        ExtentCucumberAdapter.addTestStepLog("Sending request to Create Contact Note");
        ExtentCucumberAdapter.addTestStepLog("Request URL: " + strTYKURL);
        ExtentCucumberAdapter.addTestStepLog("Request Headers: Authorization=" + strAuthentication);
        ExtentCucumberAdapter.addTestStepLog("Request Body:\n" + strJsonBody);

        //objCucumberLogger.PrintStatus(strJsonBody);

        response = with().spec(rspec)
                .header("Authorization",strBearerToken+" "+strJWTToken)
                .header("X-TYK-API-KEY",TYK_KEY)
                .header("Content-Type","application/json")
                .body(strJsonBody)
                .post(strTYKURL);
        responseBody = objdevHelperLibrary.getResponseBody(response);

        // Logging response details
        ExtentCucumberAdapter.addTestStepLog("Response Code: " + response.getStatusCode());
        ExtentCucumberAdapter.addTestStepLog("Response Body:\n" + responseBody);

        //objCucumberLogger.PrintStatus("Status code is"+response.statusCode());
        objCucumberLogger.PrintStatus("Response is"+responseBody);
        return response;
    }

can we declare these 2 varibales in class global - 
        String strAuthentication = objdevHelperLibrary.buildAuthHeader(strBearerToken, strJWTToken);
        String strTYKURL = objdevHelperLibrary.getTYKURL(strEnvType, "TYK.CONTACTNOTES");
