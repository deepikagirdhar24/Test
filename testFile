@Then("I verify the following fields in Update Natural Person response")
public void verifyUpdateNaturalPersonFields(DataTable dataTable) {
    Map<String, String> expectedValues = dataTable.asMap(String.class, String.class);

    for (Map.Entry<String, String> entry : expectedValues.entrySet()) {
        String responseKey = entry.getKey();

        // ðŸ”¹ Helper se expected aur actual dono nikal lo
        String expectedValue = updateNaturalPerson.resolveExpectedValue(entry.getValue(), scenarioContext);
        String actualValue = updateNaturalPerson.resolveActualValue(response, responseKey);

        ExtentCucumberAdapter.addTestStepLog(
                "Validating field: '" + responseKey +
                        "' | Expected: '" + expectedValue +
                        "' | Actual: '" + actualValue + "'"
        );

        // ðŸ”¹ Assertion yahin rahega
        Assert.assertEquals(
                actualValue,
                expectedValue,
                "Mismatch for field: " + responseKey
        );
    }
}

public String resolveExpectedValue(String expectedValue, ScenarioContext scenarioContext) {
    // Use resolveId to handle SC: and OBJECT_ID tokens
    expectedValue = payloadHelper.resolveId(expectedValue, scenarioContext);

    // Treat blank as null
    if (expectedValue != null && expectedValue.trim().isEmpty()) {
        expectedValue = null;
    }

    return expectedValue;
}

public String resolveActualValue(String response, String responseKey) {
    String actualValue = jsonHelper.getValue(response, responseKey);

    // Normalize string "null" to actual null
    if (actualValue != null && "null".equalsIgnoreCase(actualValue.trim())) {
        actualValue = null;
    }

    return actualValue;
}
