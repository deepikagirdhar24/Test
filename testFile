package utilities;

import com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter;
import io.restassured.response.Response;
import org.testng.Assert;

import java.util.List;
import java.util.Map;

public class ErrorResponseVerifier {

    public void verifyDescription(Response objResponse, String strExpectedDescription) throws Exception {
        String strActualDescription = JsonHelper.extractStringField(objResponse, "description");
        ExtentCucumberAdapter.addTestStepLog("Actual description: " + strActualDescription);
        Assert.assertEquals(strActualDescription, strExpectedDescription, "Mismatch in description");
    }

    public void verifyValidationErrors(Response objResponse, String strExpectedErrorsCSV) throws Exception {
        List<String> listActualErrors = JsonHelper.extractListOfStringFieldsFromArray(objResponse, "validationErrors", "error");
        ExtentCucumberAdapter.addTestStepLog("Actual error messages: " + listActualErrors);

        for (String strExpectedError : strExpectedErrorsCSV.split("\\s*,\\s*")) {
            Assert.assertTrue(listActualErrors.contains(strExpectedError), "Missing expected error: " + strExpectedError);
        }
    }

    public void verifyTopLevelAWSFields(Response objResponse, Map<String, String> mapExpectedFields) throws Exception {
        String strActualType = JsonHelper.extractStringField(objResponse, "type");
        String strActualTitle = JsonHelper.extractStringField(objResponse, "title");
        String strActualDetail = JsonHelper.extractStringField(objResponse, "detail");

        ExtentCucumberAdapter.addTestStepLog("Actual type: " + strActualType);
        ExtentCucumberAdapter.addTestStepLog("Actual title: " + strActualTitle);
        ExtentCucumberAdapter.addTestStepLog("Actual detail: " + strActualDetail);

        Assert.assertEquals(strActualType, mapExpectedFields.get("type"), "Mismatch in 'type'");
        Assert.assertEquals(strActualTitle, mapExpectedFields.get("title"), "Mismatch in 'title'");
        Assert.assertEquals(strActualDetail, mapExpectedFields.get("detail"), "Mismatch in 'detail'");
    }

    public void verifyErrorDetails(Response objResponse, Map<String, String> mapExpectedFields) {
        String strErrorTitle = JsonHelper.extractStringFieldFromArray(objResponse, "errorDetails", 0, "title");
        String strErrorField = JsonHelper.extractStringFieldFromArray(objResponse, "errorDetails", 0, "field");
        String strErrorDetail = JsonHelper.extractStringFieldFromArray(objResponse, "errorDetails", 0, "detail");

        ExtentCucumberAdapter.addTestStepLog("Actual errorDetails[0].title: " + strErrorTitle);
        ExtentCucumberAdapter.addTestStepLog("errorDetails[0].field exists with value: " + strErrorField);
        ExtentCucumberAdapter.addTestStepLog("Actual errorDetails[0].detail: " + strErrorDetail);

        Assert.assertEquals(strErrorTitle, mapExpectedFields.get("errorDetails.title"), "Mismatch in errorDetails.title");
        Assert.assertEquals(strErrorDetail, mapExpectedFields.get("errorDetails.detail"), "Mismatch in errorDetails.detail");
        Assert.assertNotNull(strErrorField, "errorDetails[0].field should not be null");
        Assert.assertFalse(strErrorField.trim().isEmpty(), "errorDetails[0].field should not be empty");
    }
}

How to declare JSONHelper object here ? and how to call methods ?
