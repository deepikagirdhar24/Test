@Then("Send request to generate person(s) with below details")
public void sendRequestToGeneratePersonsWithDetails(DataTable dataTable) throws JsonProcessingException {
    List<Map<String, String>> personList = dataTable.asMaps(String.class, String.class);
    String jwtToken = scenarioContext.getContext("JWTToken");

    if (personList.size() == 1) {
        // Single person creation
        Map<String, String> personDetails = personList.get(0);
        response = objNaturalPerson.createNewPerson(strEnvType, "Bearer", jwtToken, personDetails, scenarioContext);
    } else {
        // Multiple persons creation
        List<String> lstPersonIds = new ArrayList<>();
        for (Map<String, String> mapPersonData : personList) {
            Response resp = objNaturalPerson.createNewPerson(strEnvType, "Bearer", jwtToken, mapPersonData, scenarioContext);
            String objectId = resp.jsonPath().getString("objectId");
            lstPersonIds.add(objectId);
        }
        scenarioContext.setContext("GeneratedPersonIds", lstPersonIds);
    }
}

@Then("Send POST ContactNote Request with below details")
public void sendPOSTContactNoteRequestWithDetails(DataTable dataTable) throws JsonProcessingException {
    Map<String, String> mapNoteDetails = dataTable.asMap(String.class, String.class);
    String jwtToken = scenarioContext.getContext("JWTToken");

    if (mapNoteDetails.containsKey("personIds")) {
        // Single person note
        response = objContactNotes.createContactNote(strEnvType, "Bearer", jwtToken, mapNoteDetails, scenarioContext);
    } else {
        // Multiple persons note
        List<String> lstPersonIds = (List<String>) scenarioContext.getContext("GeneratedPersonIds");
        response = objContactNotes.createContactNote(strEnvType, "Bearer", jwtToken, mapNoteDetails, lstPersonIds);
    }
}
