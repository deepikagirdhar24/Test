Below is one of the functions in createContactNotes.java - 

    public String getOrderId(Response response) throws JsonProcessingException {
        JsonNode rootNode = objectMapper.readTree(response.asString());
        return rootNode.path("orderId").asText();
    }

CreateContactSteps.java - 
    @And("I verify the OrderId")
    public void iVerifyTheOrderId() throws JsonProcessingException {
        String stringOrderId=objpostContactNotes.getOrderId(response);
        ExtentCucumberAdapter.addTestStepLog("Actual value of Order Id is : " +stringOrderId);
        Assert.assertNotNull(stringOrderId, "Order Id should not be null");
        Assert.assertFalse(stringOrderId.isEmpty(), "Order Id should not be empty");
    }

Feature file - 

Feature:  Post Contact Notes API

  Scenario Outline: Verify the Post Contact Notes API
    Given Send Request to get Authentication Token for ICOS
    When I generate the JWT Token
    And Send request to generate New Person with "<FirstName>"
    Then Send POST ContactNote Request
    And I verify the Status Code for Create Contact Notes "<StatusCode>"
    And I verify the OrderId

    Examples:
      | StatusCode | FirstName   |
      |  200       | FirstName_1 |
      |  200       | FirstName_2 |

The comment from my senior is - 
The 'orderid' key should be parameterized as a function argument to enhance reusability. This would allow the function to work with various keys (e.g., 'orderid', 'personid') without duplicating similar code for each key. Following this approach would improve maintainability and adhere to the DRY (Don't Repeat Yourself) principle, allowing a single function to handle multiple data types with minimal code.

How to implement this ?
