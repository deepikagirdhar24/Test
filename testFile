And I verify the validation error message for Contact Notes:
  | description | Validation Errors |
  | value       | ghgf              |
  | error       | Person not found  |

@And("I verify the validation error message for Contact Notes:")
public void verifyValidationErrorMessage(DataTable dataTable) {
    Map<String, String> expectedValues = dataTable.asMap(String.class, String.class);
    String responseBody = response.getBody().asString();
    JsonPath jsonPath = new JsonPath(responseBody);

    // Verify 'description'
    String actualDescription = jsonPath.getString("description");
    Assert.assertEquals("Mismatch in description", expectedValues.get("description"), actualDescription);

    // Verify error in 'validationErrors'
    List<Map<String, String>> validationErrors = jsonPath.getList("validationErrors");

    boolean matchFound = false;
    for (Map<String, String> errorItem : validationErrors) {
        if (expectedValues.get("value").equals(errorItem.get("value")) &&
            expectedValues.get("error").equals(errorItem.get("error"))) {
            matchFound = true;
            break;
        }
    }

    Assert.assertTrue("Expected validation error not found", matchFound);
}
