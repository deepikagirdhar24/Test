@Then("I verify the following fields in Update Natural Person response")
public void verifyUpdateNaturalPersonFields(DataTable dataTable) {
    updateNaturalPerson.verifyUpdateNaturalPersonFields(dataTable, response, scenarioContext);
}

public void verifyUpdateNaturalPersonFields(DataTable dataTable, String response, ScenarioContext scenarioContext) {
    Map<String, String> expectedValues = dataTable.asMap(String.class, String.class);

    for (Map.Entry<String, String> entry : expectedValues.entrySet()) {
        String responseKey = entry.getKey();
        String expectedValue = entry.getValue();

        // ðŸ”¹ Centralized handling
        expectedValue = payloadHelper.resolveId(expectedValue, scenarioContext);

        if (expectedValue != null && expectedValue.trim().isEmpty()) {
            expectedValue = null;
        }

        String actualValue = jsonHelper.getValue(response, responseKey);

        if (actualValue != null && "null".equalsIgnoreCase(actualValue.trim())) {
            actualValue = null;
        }

        ExtentCucumberAdapter.addTestStepLog(
                "Validating field: '" + responseKey +
                        "' | Expected: '" + expectedValue +
                        "' | Actual: '" + actualValue + "'"
        );

        Assert.assertEquals(
                actualValue,
                expectedValue,
                "Mismatch for field: " + responseKey
        );
    }
}
