public static WorkRequest buildWorkRequestPayload(Map<String, String> mapWorkRequestDetails) {
    WorkRequest workRequest = new WorkRequest();

    workRequest.setStrBpId(mapWorkRequestDetails.get("bpId"));
    workRequest.setStrType(mapWorkRequestDetails.get("type"));
    workRequest.setStrSubject(mapWorkRequestDetails.get("subject"));
    workRequest.setStrDescription(mapWorkRequestDetails.get("description"));

    String dueDateInput = mapWorkRequestDetails.get("dueDate");
    String resolvedDueDate = "";

    if (dueDateInput != null && !dueDateInput.trim().isEmpty()) {
        switch (dueDateInput.trim().toUpperCase()) {
            case "PAST":
                resolvedDueDate = LocalDate.now().minusDays(7).toString();
                break;
            case "TODAY":
                resolvedDueDate = LocalDate.now().toString();
                break;
            case "FUTURE":
                resolvedDueDate = LocalDate.now().plusDays(7).toString();
                break;
            default:
                resolvedDueDate = ""; // Invalid keyword
        }
    }

    workRequest.setStrDueDate(resolvedDueDate); // Always set, empty if needed
    return workRequest;
}
