package ICOS;

import ICOS.pojo.POJONewPersonRequest;
import com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import commonLibrary.devHelperLibrary;
import io.cucumber.datatable.DataTable;
import io.restassured.response.Response;
import org.testng.Assert;
import utilities.*;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class NaturalPerson extends BaseApiClient {

    private ObjectMapper objObjectMapper;
    private CucumberLogger objCucumberLogger;
    private EncryptionUtil objEncryptionUtil;

    public NaturalPerson() throws Exception {
        objObjectMapper = new ObjectMapper();
        objCucumberLogger = new CucumberLogger();
        objEncryptionUtil = new EncryptionUtil();
    }

    // Create Natural Person
    public Response createNewPerson(String strEnvType, String strBearerToken, String strJwtToken, Map<String, String> mapPersonDetails, ScenarioContext scenarioContext) throws Exception {
        String strUrl = getTYKURL(strEnvType, "TYK.CREATENEWPERSON");
        POJONewPersonRequest pojoNewPersonRequest = Payloads.buildNewPersonPayload(mapPersonDetails);
        String strRequestBody = objObjectMapper.writeValueAsString(pojoNewPersonRequest);

        ExtentCucumberAdapter.addTestStepLog("Sending request to create Natural Person");

        Response objResponse = sendPostRequest(strUrl, strBearerToken, strJwtToken, strRequestBody, null);
        String strResponseBody = devHelperLibrary.getResponseBody(objResponse);
        objCucumberLogger.PrintStatus("Response is: " + strResponseBody);

        String strNaturalPersonObjectId = JsonHelper.extractStringField(objResponse, "objectId");
        String strNaturalPersonOrderId = JsonHelper.extractStringField(objResponse, "orderId");
        String strNaturalPersonUuid = pojoNewPersonRequest.getStrUuid();

        scenarioContext.setContext("naturalPersonObjectId", strNaturalPersonObjectId);
        scenarioContext.setContext("naturalPersonOrderId", strNaturalPersonOrderId);
        scenarioContext.setContext("naturalPersonUuid", strNaturalPersonUuid);

        return objResponse;
    }

where should I declret it ?
