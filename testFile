public static POJOAddressRequest buildAddressPayload(Map<String, String> mapAddressDetails, boolean includeUuid) {
    POJOAddressRequest address = new POJOAddressRequest();

    if (includeUuid) {
        address.setStrUuid(UUID.randomUUID().toString().substring(0, 7));
    }

    address.setStrSalutation(PayloadHelper.normalize(mapAddressDetails.get("salutation")));
    address.setStrSalutationLetter(PayloadHelper.normalize(mapAddressDetails.get("salutationLetter")));
    address.setStrAttnOf(PayloadHelper.normalize(mapAddressDetails.get("attnOf")));
    address.setStrCrof(PayloadHelper.normalize(mapAddressDetails.get("crof")));
    address.setStrResidency(PayloadHelper.normalize(mapAddressDetails.get("residency")));
    address.setStrStreetNr(PayloadHelper.normalize(mapAddressDetails.get("streetNr")));

    // Custom: teststreet + 6 random chars
    String street = "teststreet" + PayloadHelper.randomString(6);
    address.setStrStreet(street);

    address.setStrStreetAdd(PayloadHelper.normalize(mapAddressDetails.get("streetAdd")));
    address.setStrPoBox(PayloadHelper.normalize(mapAddressDetails.get("poBox")));
    address.setStrCity(PayloadHelper.normalize(mapAddressDetails.get("city")));

    // Custom: RANDOM_49 for state
    address.setStrState(PayloadHelper.resolveDynamicText("RANDOM_49"));

    address.setStrZip(PayloadHelper.normalize(mapAddressDetails.get("zip")));
    address.setStrCountry(PayloadHelper.normalize(mapAddressDetails.get("country")));

    return address;
}
