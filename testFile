public List<String> resolveIdList(String input, String fallbackSingleAddressId, List<String> addressObjectIds) {
    if (input == null || input.trim().isEmpty()) {
        return Collections.emptyList();
    }

    if ("ADDRESS_OBJECT_ID_LIST".equalsIgnoreCase(input.trim())) {
        return addressObjectIds != null ? addressObjectIds : Collections.emptyList();
    }

    // Resolve individual tokens
    return Arrays.stream(input.split(","))
            .map(id -> resolveId(id.trim(), fallbackSingleAddressId))
            .filter(Objects::nonNull)
            .collect(Collectors.toList());
}

public POJOMoneyAccountRequest buildMoneyAccountPayload(Map<String, String> mapMoneyAccountDetails, ScenarioContext scenarioContext) {
    POJOMoneyAccountRequest moneyAccount = new POJOMoneyAccountRequest();

    String strContainerObjectId = scenarioContext.getContext("containerObjectId");
    String strAddressObjectId = scenarioContext.getContext("addressObjectId");

    // ðŸ‘‡ Fetch the list only once
    @SuppressWarnings("unchecked")
    List<String> addressObjectIds = (List<String>) scenarioContext.getContext("addressObjectIds");

    moneyAccount.setStrUuid(UUID.randomUUID().toString().substring(0, 8));

    String ownerId = payloadHelper.resolveId(mapMoneyAccountDetails.get("ownerId"), strContainerObjectId);
    moneyAccount.setStrOwnerId(ownerId);

    moneyAccount.setStrType(payloadHelper.normalize(mapMoneyAccountDetails.get("type")));
    moneyAccount.setStrCurrency(payloadHelper.normalize(mapMoneyAccountDetails.get("currency")));
    moneyAccount.setStrRubric(payloadHelper.normalize(mapMoneyAccountDetails.get("rubric")));

    String addressList = payloadHelper.normalize(mapMoneyAccountDetails.get("addressIds"));
    if (addressList != null) {
        // ðŸ‘‡ Pass the pre-fetched list instead of accessing scenarioContext again
        List<String> resolvedAddressIds = payloadHelper.resolveIdList(addressList, strAddressObjectId, addressObjectIds);
        moneyAccount.setLstAddressIds(resolvedAddressIds);
    }

    // Other fields unchanged...
    return moneyAccount;
}
