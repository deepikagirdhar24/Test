public static String resolveDynamicText(String type) {
    if (type == null || type.isEmpty()) return "";
    if (type.equalsIgnoreCase("EMPTY")) return "";

    // Handle expression like "prefix + RANDOM_6 + suffix"
    if (type.contains("+")) {
        String[] parts = type.split("\\+");
        StringBuilder result = new StringBuilder();
        for (String part : parts) {
            String trimmed = part.trim();
            result.append(resolveDynamicText(trimmed));
        }
        return result.toString();
    }

    if (type.equalsIgnoreCase("RANDOM_LT_250")) {
        return randomString(random.nextInt(249) + 1);
    }

    if (type.equalsIgnoreCase("RANDOM_GT_250")) {
        return randomString(random.nextInt(500) + 251);
    }

    if (type.toUpperCase().startsWith("RANDOM_")) {
        try {
            int length = Integer.parseInt(type.substring(7));
            return randomString(length);
        } catch (NumberFormatException e) {
            return type;
        }
    }

    // Otherwise treat as literal value
    return type;
}
