Scenario Outline: Verify the Get Legal Person API
  Given Send Request to get Authentication Token for ICOS
  When I generate the JWT Token
  Then Send request to generate Legal Person with below details
    | subType         | <subType>       |
    | domicileCountry | <domiCountry>   |
    | name            | <name>          |
  And I verify the Status Code for Legal Person "<statusCode>"
  Then Send Request to get Legal Person
  And I verify the string field "subType.key" is "<subType>" in Legal Person response
  And I verify the string field "residenceAddress.country" is "<domiCountry>" in Legal Person response
  And I verify the string field "name" is "<name>" in Legal Person response

@And("I verify the array field {string} contains {string}")
public void iVerifyArrayFieldContainsValue(String jsonArrayPath, String expectedValue) throws Exception {
    boolean valueExists = JsonHelper.valueExistsInJsonArray(response, jsonArrayPath, expectedValue);
    ExtentCucumberAdapter.addTestStepLog("Expected value in array '" + jsonArrayPath + "': " + expectedValue + " â†’ Found: " + valueExists);
    Assert.assertTrue(valueExists, "Value '" + expectedValue + "' not found in array: " + jsonArrayPath);
}

@And("I verify the string field {string} is {string}")
public void iVerifyStringFieldEquals(String jsonPath, String expectedValue) throws Exception {
    String actualValue = JsonHelper.extractStringField(response, jsonPath);
    ExtentCucumberAdapter.addTestStepLog("Expected value at '" + jsonPath + "': " + expectedValue + ", Actual: " + actualValue);
    Assert.assertEquals(actualValue, expectedValue, "Mismatch at: " + jsonPath);
}

@And("I verify the boolean field {string} is {word}")
public void iVerifyBooleanFieldEquals(String jsonPath, String expectedBool) throws Exception {
    boolean expectedValue = Boolean.parseBoolean(expectedBool);
    boolean actualValue = JsonHelper.extractBooleanField(response, jsonPath);
    ExtentCucumberAdapter.addTestStepLog("Expected boolean at '" + jsonPath + "': " + expectedValue + ", Actual: " + actualValue);
    Assert.assertEquals(actualValue, expectedValue, "Mismatch at: " + jsonPath);
}

@And("I verify the string field {string} is {string} in Legal Person response")
public void iVerifyStringFieldInLegalPerson(String jsonPath, String expectedValue) throws Exception {
    String actualValue = JsonHelper.extractStringField(response, jsonPath);
    ExtentCucumberAdapter.addTestStepLog("Expected value at '" + jsonPath + "': " + expectedValue + ", Actual: " + actualValue);
    Assert.assertEquals(actualValue, expectedValue, "Mismatch at: " + jsonPath);
}

