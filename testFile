    // Update Natural Person
    public Response updateNaturalPerson(String strEnvType, String strBearerToken, String strJwtToken, Map<String, String> mapUpdPersonDetails, ScenarioContext scenarioContext) throws Exception {

        String strUrl = getTYKURL(strEnvType, "TYK.CREATENEWPERSON") + "/{PersonKey}";
        String strNaturalPersonObjectId = scenarioContext.getContext("naturalPersonObjectId");

        POJOUpdNaturalPersonRequest pojoUpdNaturalPersonRequest = payloads.buildUpdNaturalPersonPayload(mapUpdPersonDetails, scenarioContext);
        String strRequestBody = objObjectMapper.writeValueAsString(pojoUpdNaturalPersonRequest);
        objCucumberLogger.PrintStatus("Request for UPDATE Natural Person is: " + strRequestBody);

        ExtentCucumberAdapter.addTestStepLog("Sending request to update Natural Person");

        Map<String, String> mapPathParams = new HashMap<>();
        mapPathParams.put("PersonKey", strNaturalPersonObjectId);

        Response objResponse = sendPatchRequest(strUrl, strBearerToken, strJwtToken, strRequestBody, mapPathParams, null);
        String strResponseBody = devHelperLibrary.getResponseBody(objResponse);
        objCucumberLogger.PrintStatus("Response for UPDATE Natural Person is: " + strResponseBody);

        // Avoid parsing if response is not JSON
        if (objResponse.getContentType() != null && objResponse.getContentType().contains("application/json")) {
            String strUpdNaturalPersonObjectId = jsonHelper.extractStringField(objResponse, "objectId");
            String strUpdNaturalPersonOrderId = jsonHelper.extractStringField(objResponse, "orderId");
            String strUpdNaturalPersonUuid = pojoUpdNaturalPersonRequest.getStrUuid();

            scenarioContext.setContext("updNaturalPersonObjectId", strUpdNaturalPersonObjectId);
            scenarioContext.setContext("updNaturalPersonOrderId", strUpdNaturalPersonOrderId);
            scenarioContext.setContext("updNaturalPersonUuid", strUpdNaturalPersonUuid);
        }

        return objResponse;
    }
