@And("Send request to generate New Person with below details")
public void sendRequestToGenerateNewPersonWithDetails(DataTable dataTable) throws JsonProcessingException {
    List<Map<String, String>> listPersonDetails = dataTable.asMaps(String.class, String.class);
    String jwtToken = scenarioContext.getToken("JWTToken");

    // List to store the generated person IDs
    List<String> generatedPersonIds = new ArrayList<>();

    // Loop through the data table and generate multiple persons
    for (Map<String, String> personDetails : listPersonDetails) {
        response = objContactNotes.createNewPerson(strEnvType, "Bearer", jwtToken, personDetails);
        
        // Capture the objectId for each person created
        String personId = response.jsonPath().getString("objectId");
        generatedPersonIds.add(personId);
    }

    // Store the generated Person IDs in scenario context (for further use in other steps)
    scenarioContext.setContext("generatedPersonIds", generatedPersonIds);
}

    // Fetch generated Person IDs from scenario context
    List<String> personIds = scenarioContext.getContext("generatedPersonIds");

    // Set PersonIds: Use provided personIds if available, else use generated IDs
    if (mapNoteDetails.containsKey("personIds") && mapNoteDetails.get("personIds") != null && !mapNoteDetails.get("personIds").isEmpty()) {
        noteRequest.setLstPersonIds(Collections.singletonList(mapNoteDetails.get("personIds")));
    } else {
        noteRequest.setLstPersonIds(personIds); // Use the list of generated person IDs
    }

package utilities;

import java.util.HashMap;

public class ScenarioContext {

    private HashMap<String, String> tokenMap = new HashMap<>();

    public void setToken(String key, String value)
    {
        tokenMap.put(key, value);
    }

    public String getToken(String key)
    {
        return tokenMap.get(key);
    }

    public HashMap<String, String> getAllTokens()
    {
        return tokenMap;
    }
}

