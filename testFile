Thsi is the JSON repsonse when I get the DOcument - 

{
    "personId": "665321511",
    "challengeWord": "Challenge Answer",
    "questions": [
        {
            "question": "Question 1",
            "answer": "Answer 1"
        },
        {
            "question": "Question 2",
            "answer": "Answer 2"
        },
        {
            "question": "Question 3",
            "answer": "Answer 3"
        },
        {
            "question": "Question 4",
            "answer": "Answer 4"
        },
        {
            "question": "Question 5",
            "answer": "Answer 5"
        }
    ]
}

I need to validate question = Question 1, answer = Answer 1
I need to validate question = Question 2, answer = Answer 2
I need to validate question = Question 3, answer = Answer 3
I need to validate question = Question 4, answer = Answer 4
I need to validate question = Question 5, answer = Answer 5

Can I use these existing methods, or need a new method to validate ?

    @And("I verify the string field {string} is {string} in Document response")
    public void iVerifyStringFieldEquals(String jsonPath, String expectedValue) throws Exception {
        String actualValue = JsonHelper.extractStringField(response, jsonPath);
        ExtentCucumberAdapter.addTestStepLog("Expected value at '" + jsonPath + "': " + expectedValue + ", Actual: " + actualValue);
        Assert.assertEquals(actualValue, expectedValue, "Mismatch at: " + jsonPath);
    }

    @And("I verify the array field {string} contains {string} in Document response")
    public void iVerifyArrayFieldContainsValue(String jsonArrayPath, String expectedValue) throws Exception {
        boolean valueExists = JsonHelper.valueExistsInJsonArray(response, jsonArrayPath, expectedValue);
        ExtentCucumberAdapter.addTestStepLog("Expected value in array '" + jsonArrayPath + "': " + expectedValue + " â†’ Found: " + valueExists);
        Assert.assertTrue(valueExists, "Value '" + expectedValue + "' not found in array: " + jsonArrayPath);
    }

