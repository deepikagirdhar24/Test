public List<String> resolveIdList(String input, ScenarioContext scenarioContext) {
    if (input == null || input.trim().isEmpty()) {
        return Collections.emptyList();
    }

    // Special case: full list of addresses
    if ("ADDRESS_OBJECT_ID_LIST".equalsIgnoreCase(input.trim())) {
        @SuppressWarnings("unchecked")
        List<String> addressObjectIds = (List<String>) scenarioContext.getContext("addressObjectIds");
        return addressObjectIds != null ? addressObjectIds : Collections.emptyList();
    }

    // Resolve individual tokens via resolveId
    return Arrays.stream(input.split(","))
            .map(id -> resolveId(id.trim(), scenarioContext))
            .filter(Objects::nonNull)
            .collect(Collectors.toList());
}

List<String> resolvedAddressIds = payloadHelper.resolveIdList(
    mapMoneyAccountDetails.get("addressIds"), scenarioContext
);
moneyAccount.setLstAddressIds(resolvedAddressIds);
