WHat is the problem in this ?

Feature: Verify Debit Card API

  Scenario Outline: Verify the Post Debit Card API with valid data - <Comments>
    Given Send Request to get Authentication Token for ICOS
    When I generate the JWT Token
    Then Send Request to create Container with below details
      | type   | banking   |
      | bpId   | 66001416  |
    Then Send request to create Address with below details
      | firstName       | Firstname             |
      | middleName      | Middlename            |
      | lastName        | Lastname              |
      | salutation      | mr                    |
      | salutationLetter| mr                    |
      | attnOf          |                       |
      | crof            |                       |
      | residency       | 123                   |
      | streetNr        | 123                   |
      | street          | teststreet + RANDOM_6 |
      | streetAdd       | Addition street       |
      | poBox           | P.O.Box 123           |
      | city            | Zurich                |
      | state           | RANDOM_49             |
      | zip             | 8001                  |
      | country         | CH                    |
    Then Send Request to create Money Account with below details
      | ownerId            | CONTAINER_OBJECT_ID     |
      | type               | privateCurrentAccount   |
      | currency           | GBP                     |
      | rubric             | NA                      |
      | addressIds         | ADDRESS_OBJECT_ID       |
      | mailingOffsetDay   | NA                      |
      | mailingOffsetMonth | NA                      |
      | minimalNoticeDays  | NA                      |
      | isMailingPaper     | false                   |
    Then Send Request to create Debit Card with below details
      | type        | <type>        |
      | maccId      | <maccId>      |
      | ownerId     | <ownerId>     |
      | label       | <label>       |
      | dailyLimit  | <dailyLimit>  |
      | addressId   | <addressId>   |
    And I verify the Status Code for Debit Card "200"
    And I verify the "objectId" exists in Debit Card response
    And I verify the "orderId" exists in Debit Card response

    Examples:
      | type    | maccId                   | ownerId    | label      | dailyLimit | addressId         | Comments                 |
      | DEBIT   | MONEY_ACCOUNT_OBJECT_ID  | 665041400  | LABEL 123  | 555        | ADDRESS_OBJECT_ID | 001 - StraightThrough    |

    @Then("Send Request to create Debit Card with below details")
    public void sendRequestToCreateDebitCardWithDetails(DataTable dataTable) throws Exception {
        Map<String, String> mapDebitCardDetails = dataTable.asMap(String.class, String.class);
        String jwtToken = scenarioContext.getContext("JWTToken");
        response = objDebitCard.createDebitCard(strEnvType, "Bearer", jwtToken, mapDebitCardDetails, scenarioContext);
    }

// Create Debit Card
    public Response createDebitCard(String strEnvType, String strBearerToken, String strJWTToken,
                                      Map<String, String> mapDebitCardDetails, ScenarioContext scenarioContext) throws Exception {

        String strTYKURL = getTYKURL(strEnvType, "TYK.DEBITCARD");

        POJODebitCardRequest pojoDebitCardRequest = payloads.buildDebitCardPayload(mapDebitCardDetails, scenarioContext);
        String strRequestBody = objObjectMapper.writeValueAsString(pojoDebitCardRequest);
        objCucumberLogger.PrintStatus("Request for Debit Card is: " + strRequestBody);

        ExtentCucumberAdapter.addTestStepLog("Sending request to Create Debit Card");

        Response objResponse = sendPostRequest(strTYKURL, strBearerToken, strJWTToken, strRequestBody, null);
        String strResponseBody = devHelperLibrary.getResponseBody(objResponse);
        objCucumberLogger.PrintStatus("Response for Debit Card is: " + strResponseBody);

        String strDebitCardObjectId = jsonHelper.extractStringField(objResponse, "objectId");
        String strDebitCardOrderId = jsonHelper.extractStringField(objResponse, "orderId");

        scenarioContext.setContext("debitCardObjectId", strDebitCardObjectId);
        scenarioContext.setContext("debitCardOrderId", strDebitCardOrderId);

        return objResponse;
    }

public POJODebitCardRequest buildDebitCardPayload(Map<String, String> mapDebitCardDetails, ScenarioContext scenarioContext) {
        POJODebitCardRequest debitCard = new POJODebitCardRequest();

        String strMoneyAccountObjectId = scenarioContext.getContext("moneyAccountObjectId");
        String strAddressObjectId = scenarioContext.getContext("addressObjectId");

        debitCard.setStrUuid(UUID.randomUUID().toString().substring(0, 7));
        debitCard.setStrType(payloadHelper.normalize(mapDebitCardDetails.get("type")));

        String resolvedMaccId = payloadHelper.resolveId(mapDebitCardDetails.get("maccId"), strMoneyAccountObjectId);
        debitCard.setStrMaccId(resolvedMaccId);

        debitCard.setStrOwnerId(payloadHelper.normalize(mapDebitCardDetails.get("ownerId")));

        debitCard.setStrLabel(payloadHelper.normalize(mapDebitCardDetails.get("label")));
        payloadHelper.applyBigDecimalField(mapDebitCardDetails.get("dailyLimit"), "dailyLimit", debitCard);

        String resolvedAddressId = payloadHelper.resolveId(mapDebitCardDetails.get("addressId"), strAddressObjectId);
        debitCard.setStrAddressId(resolvedAddressId);

        return debitCard;
    }

Although on postman it is working fine - 

